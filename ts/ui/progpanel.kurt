[def {
  ProgPanel: {
    make: (programmed width height parser | {
      ^: ProgPanel:-impl
      programmed width height parser
      chunk: programmed:program-chunk
      cursor: [chunk:add [UI:Cursor:make]]
    })

    -impl: {
      move-cursor: (dx dy |
        {nx: [+ @:cursor:loc:x dx]
         ny: [+ @:cursor:loc:y dy]}
        [if [and [>= nx 0] [>= ny 0] [< nx @:width] [< ny @:height]]
          (@:cursor:move-to nx ny)
        ]
      )

      erase: (
        ?= [@:cursor:top-with :glyph] (@:chunk:remove prev)
      )

      write: (type |
        @:chunk:add-at [Glyph:make type] @:cursor:loc:x @:cursor:loc:y
      )

      close: (do
        [@:chunk:remove @:cursor]
        [set @:programmed {
          program: [@:parser @:chunk]
        }]
      )
    }
  }

  Glyph: {
    -src: "images/script.png"
    -scr-img: (x y | Rendered:image "images/script.png" {x: x y: y})
    -imgs: {
      square-open-horz:  [-scr-img  0  0]
      square-open-vert:  [-scr-img 32  0]
      square-close-horz: [-scr-img 16  0]
      square-close-vert: [-scr-img 48  0]
      round-open-horz:   [-scr-img  0 16]
      round-open-vert:   [-scr-img 32 16]
      round-close-horz:  [-scr-img 16 16]
      round-close-vert:  [-scr-img 48 16]
      curly-open-horz:   [-scr-img  0 32]
      curly-open-vert:   [-scr-img 32 32]
      curly-close-horz:  [-scr-img 16 32]
      curly-close-vert:  [-scr-img 48 32]

      block-horz:        [-scr-img  0 48]
      block-vert:        [-scr-img 16 48]
      quote-horz:        [-scr-img 32 48]
      quote-vert:        [-scr-img 48 48]
      period-horz:       [-scr-img  0 64]
      period-vert:       [-scr-img 16 64]

      user:              [-scr-img 64  0]
      chunk:             [-scr-img 64 16]
      perform:           [-scr-img 64 32]
      ignite:            [-scr-img 64 48]
      target:            [-scr-img 64 64]
    }

    make: (type |
      [Entity:make [list
        [Located:make]
        [Rendered:make [-imgs type]]
        {glyph: {type}}
      ]]
    )
  }
}]
