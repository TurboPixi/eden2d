[def {
  -- `kind`: function with a single 'chunk' param that produces an entity.
  make-at = [kind chunk x y | do
    [def {ent = [kind chunk]}]
    [ent:move-to x y]
    ent
  ]

  Floor = {
    make = [chunk | do
      [def {ent = [make-ent]}]
      [Loc:make ent]
      [Render:make ent "tile-blue-tile"]
      [chunk:add ent]
    ]
  }

  Wall = {
    make = [chunk | do
      [def {ent = [make-ent]}]
      [Loc:make ent]
      [Render:make ent "tile-blue-wall"]
      [chunk:add ent]
    ]
  }

  WoodDoor = {
    make = [chunk | do
      [def {ent = [make-ent]}]
      [Loc:make ent]
      [Door:make ent "tile-door-ew" "tile-door-ns"]
      [chunk:add ent]
    ]
  }

  Stairs = {
    make = [chunk x y target-chunk target-x target-y up? | do
      [def {ent = [make-ent]}]
      [Loc:make ent]
      [Render:make ent [if up?
        "tile-stair-up"
        "tile-stair-down"
      ]]
      [Portal:make ent target-chunk target-x target-y]
      [ent:move-to x y]
      [chunk:add ent]
    ]
  }

  -- Door component.
  Door = {
    make = [ent closed-img open-img | do
      [def {
        render = [Render:make ent closed-img]
        door = {
          ^ = Door:impl
          open = false
          closed-img = closed-img
          open-img = open-img
        }
      }]
      [set ent {door = door}]
    ]

    impl = {
      perform = [ent action | if [= action:action :open]
        [| @:toggle ent]
      ]

      toggle = [ent | do
        [set @ {open = [! @:open]}]
        [log @:open]
        [set ent:render {image-key = [if @:open @:open-img @:closed-img]}]
      ]
    }
  }

  -- Entities with the Portal component transport an entity to another location/chunk.
  Portal = {
    make = [ent target-chunk target-x target-y |
      set ent {
        portal = {
          ^ = Portal:impl
          target-chunk = target-chunk
          target-x = target-x
          target-y = target-y
        }
      }
    ]

    impl = {
      perform = [ent action | if [= action:action :enter]
        [| do
          [action:ent:jump @:target-chunk]
          [action:ent:move-to @:target-x @:target-y]
        ]
      ]
    }
  }
}]
