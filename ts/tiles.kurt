[def {
  -- `kind`: function with a single 'chunk' param that produces an entity.
  make-at = [kind chunk x y | 
    {ent = [kind chunk]}
    [do
      [ent:move-to x y]
      ent
    ]
  ]

  Floor = {
    -img = [Render:image "images/floors.png" {x = 0 y = 16}]

    make = [chunk |
      {ent = [make-ent]}
      [do
        [Loc:make ent]
        [Render:make ent Floor:-img]
        [chunk:add ent]
      ]
    ]
  }

  Wall = {
    -img = [Render:image "images/wall-stone-blue.png" {
      x = [* 5 16]
      y = [* 3 16]
    }]

    make = [chunk |
      {ent = [make-ent]}
      [do
        [Loc:make ent]
        [Solid:make ent 1]
        [Render:make ent Wall:-img]
        [chunk:add ent]
      ]
    ]
  }

  WoodDoor = {
    -img-closed = [Render:image "images/rogue/environment.png" {x = 16 y = [* 8 16]}]
    -img-open = [Render:image "images/rogue/environment.png" {
      x = 4 y = [+ [* 8 16] 9]
      w = 8 h = 22
    }]

    make = [chunk |
      {ent = [make-ent]}
      [do
        [Loc:make ent]
        [Door:make ent 123 Door:-img-closed Door:-img-open]
        [chunk:add ent]
      ]
    ]
  }

  Stairs = {
    -upimg = [Render:image "images/stairs.png" {w = 16 h = 22 ay = 6}]
    -dnimg = [Render:image "images/stairs.png" {y = 22 h = 16}]
    -- TODO: list items eval'd in wrong env -imgs = :[Stairs:-upimg Stairs:-dnimg]

    make = [chunk x y target-chunk target-x target-y up? |
      {ent = [make-ent]}
      [do
        [Loc:make ent]
        [Render:make ent [if up? Stairs:-upimg Stairs:-dnimg]]
        [Portal:make ent target-chunk target-x target-y]
        [ent:move-to x y]
        [chunk:add ent]
      ]
    ]
  }

  Solid = {
    make = [ent mass |
      set ent {solid = {mass}}
    ]
  }

  -- Door component.
  Door = {
    make = [ent code closed-img open-img |
      {
        render = [Render:make ent closed-img]
        door = {
          ^ = Door:impl
          open = false
          code closed-img open-img
        }
      }
      [set ent {door}]
    ]

    impl = {
      prepare = [ent action | if [= action:action :open] [|
        if [!= [?= action :opener :player [|env:selected-item] :key :code] @:code]
          [| set action {cancel = true}]
      ]]

      perform = [ent action |
        if [and [= action:action :open] [! action:cancel]] [| do
          [set @ {open = [! @:open]}]
          [set ent:render {image = [if @:open @:open-img @:closed-img]}]
        ]
      ]
    }
  }

  -- Entities with the Portal component transport an entity to another location/chunk.
  Portal = {
    make = [ent target-chunk target-x target-y |
      set ent {
        portal = {
          ^ = Portal:impl
          target-chunk target-x target-y
        }
      }
    ]

    impl = {
      perform = [ent action |
        if [= action:action :enter]
        [| do
          [action:ent:jump @:target-chunk]
          [action:ent:move-to @:target-x @:target-y]
        ]
      ]
    }
  }
}]
