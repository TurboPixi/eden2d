[do

[def :player-make [chunk | do
  [def :ent [make-ent]]
  [[Loc:make] ent]
  [[Render:make] ent "player-0"]
  [[Player:make] ent]
  [[chunk:add] ent]
]]

-- Player component.
[def :Player {
  make: [ent | do
    [def :inv-chunk [make-chunk]]
    [def :player {
      slot: 0
      contents: inv-chunk
      cursor-ent: [[[UI:Cursor]:make] inv-chunk]
    }]
    [set [ent:comps]:player player]
    ent
  ]

  contents: [ent | do
    [def :player [[ent:comps]:player]]
    [if [? :player] [|player:contents]]
  ]

  move: [ent dx dy | do
    [def :loc [[ent:comps]:loc]]
    [[ent:move-to] [+ [loc:x] dx] [+ [loc:y] dy]]
  ]

  follow: [ent | do
    [def :portal-ent [[ent:top-with] :portal]]
    [if [?:portal-ent] [| do
      [def :portal [[portal-ent:comps]:portal]]
      [[ent:jump] [portal:target-chunk]]
      [[ent:move-to] [portal:target-x] [portal:target-y]]
    ]]
  ]

  take: [ent | do
    [def :target [[ent:top-with] :portable]]
    [if [?:target] [| do
      [def :player [[ent:comps]:player]]
      [[[[target:jump] [player:contents]]:move-to] [player:slot] 0]
    ]]
  ]

  put: [ent | do
    [def :player [[ent:comps]:player]]
    [def :target [[[player:contents]:top-with] [player:slot] 0 :portable]]
    [if [?:target] [| do
      [def :loc [[ent:comps]:loc]]
      [[[[target:jump] [ent:chunk]]:move-to] [loc:x] [loc:y]]
    ]]
  ]

  add-inv: [player-ent item | do
    [def :player [[player-ent:comps]:player]]
    [[[player:contents]:add] item]
    [[item:move-to] [player:slot] 0]
  ]

  -- TODO: Validate slot range
  select: [ent slot | do
    [def :player [[ent:comps]:player]]
    [set player:slot slot]
    [[[player:cursor-ent]:move-to] slot 0]
  ]
}]

]
